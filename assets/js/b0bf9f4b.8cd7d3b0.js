"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[910],{4906:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var o=t(4848),s=t(8453);const i={sidebar_position:1},a="Docker Setup to Learn Ansible",r={id:"DEVELOPER PRODUCTIVITY/docker-setup",title:"Docker Setup to Learn Ansible",description:"Intro",source:"@site/docs/DEVELOPER PRODUCTIVITY/docker-setup.md",sourceDirName:"DEVELOPER PRODUCTIVITY",slug:"/DEVELOPER PRODUCTIVITY/docker-setup",permalink:"/docs/DEVELOPER PRODUCTIVITY/docker-setup",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/DEVELOPER PRODUCTIVITY/docker-setup.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"About",permalink:"/docs/intro"},next:{title:"Basic Auction Notes",permalink:"/docs/NEAR/basic-auction"}},l={},c=[{value:"Intro",id:"intro",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"docker-setup-to-learn-ansible",children:"Docker Setup to Learn Ansible"})}),"\n",(0,o.jsx)(n.h2,{id:"intro",children:"Intro"}),"\n",(0,o.jsx)(n.p,{children:"We usually have to work on different machines, laptops, servers and we lack the shortcuts and all the little things we need to get things done fast. Ansible is a tool that helps us automate and get our main setup up and running quickly. To learn how to use Ansible, I will be using a Docker container so that I can spin up a clean environment and test that my ansible playbooks work as expected. This is the docker setup I am using."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-docker",children:'FROM ubuntu:latest\n\n# Allows passing custom build-time arguments. TAGS might be used later to specify Ansible tags.\nARG TAGS\n\n# Sets the working directory inside the container.\n#  /usr/local/bin is usually for executables\nWORKDIR /usr/local/bin\n\n# Set noninteractive mode for apt to avoid prompting for user input.\nARG DEBIAN_FRONTEND=noninteractive\n\n# Update using apt as package manager, install tools for adding PPAs, add Ansible,\n# then install curl, git, ansible, build-essential, and neovim.\nRUN apt update && \\\n    apt install -y software-properties-common && \\\n    apt-add-repository -y ppa:ansible/ansible && \\\n    apt update && \\\n    apt install -y curl git ansible build-essential neovim\n\n# Copy everything from the current directory on the host into the container.\n# Placing files into /usr/local/bin\n# We are currently copying the entire project directory into the container\n# in the future we will move this into public git repo and be able to just pull and run\n# we will have folder in that repo that we will encrypt and decrypt with ansible and some will\n# be public, the cool thing about having it public is that we can pull without password or ssh key\n# this is useful so you can pull from whereever you are or any computer you have ssh access to\n# so we will test addding some public files like your ansible local.yml where it doesn\'t matter who reads it\n# we will also store some private files like your ssh key and passwords but encrypt them and only us with password can encyprt them\n# so this makes our ansible files private and we can pull from anywhere\nCOPY . .\n\n# Default command to run when the container starts.\n# Runs ansible-playbook with provided TAGS and the local.yml playbook.\n# CMD ["sh", "-c", "ansible-playbook $TAGS local.yml"]\n\n# Change the default command to just start a bash shell.\nCMD ["bash"]\n\n# TO BUILD THIS IMAGE RUN IN TERMINAL:\n#--------------------------------\n# docker build -t my-ansible-env .\n#--------------------------------\n#     Use the current directory (.) as the build context.\n#     Build the image defined by Dockerfile.\n#     Tag the resulting image as my-ansible-env.\n\n\n\n# TO RUN THIS IMAGE RUN IN TERMINAL:\n#--------------------------------\n# docker run --rm -it my-custom-ansible-env\n#--------------------------------\n#     --rm removes the container once it exits, preventing \u201cdangling\u201d containers.\n#     --it runs the container in interactive mode, allowing you to see the output.\n#      my-ansible-env is the name of the image you built.\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const s={},i=o.createContext(s);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);